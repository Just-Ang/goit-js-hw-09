{"mappings":"YAAA,IAAMA,EAAYC,SAASC,cAAc,mBACnCC,EAAaF,SAASC,cAAc,gBACxBD,SAASC,cAAc,eACpBD,SAASC,cAAc,iBAgC5CF,EAAUI,iBAAiB,SA3B3B,SAAuBC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpBC,aAAY,WAC1B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAQX,EAAWW,MACzBC,QAAQC,IAAIF,GAGRH,EACFH,EAAQ,EAAGM,GAEXL,EAAO,EAAGK,E,GAEX,I,IAIGG,MAAK,SAACC,EAAUC,GACtBJ,QAAQC,IAAI,uBAAwCI,OAAfF,EAAS,QAAYE,OAAND,EAAM,O,IAE3DE,OAAM,SAAAC,G,IAAGJ,EAAQI,EAARJ,SAAUC,EAAKG,EAALH,MAClBJ,QAAQC,IAAI,sBAAqCI,OAAfF,EAAS,QAAYE,OAAND,EAAM,O","sources":["src/js/03-promises.js"],"sourcesContent":["const submitBtn = document.querySelector('[type=\"submit\"]');\nconst delayInput = document.querySelector('[name=delay]');\nconst stepInput = document.querySelector('[name=step]');\nconst amoountInput = document.querySelector('[name=amount]');\n\n\n  \n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const timerId = setInterval(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const value = delayInput.value;\n      console.log(value);\n  \n\n      if (shouldResolve) {\n        resolve(1, value);\n      } else {\n        reject(1, value);\n      }\n    }, 1000);\n  });\n  \n\n  promise.then((position, delay) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n  }); \n}\n\n\n\nsubmitBtn.addEventListener('click', createPromise);\n\n\n\n"],"names":["$ce04d3a99e08e73b$var$submitBtn","document","querySelector","$ce04d3a99e08e73b$var$delayInput","addEventListener","position1","delay1","Promise","resolve","reject","setInterval","shouldResolve","Math","random","value","console","log","then","position","delay","concat","catch","param"],"version":3,"file":"03-promises.92a01011.js.map"}